---
features:
  - |
    New Curve Analysis options `average_method` has been added. This option
    modifies an averaging technique for y values over the same x values.
    Defaults to `sample` for the RB experiments and `shots_weighted` for the rest of analysis.
    Previously the setup was hardcoded in the ``_format_data`` method of the analysis class,
    and no statistical difference has been introduced with introduction of this option.
deprecations:
  - |
    Providing data_sort_key directly to the LMFIT model to instantiate :class:`CurveAnalysis` 
    has been deprecated. This option is not officially supported by the LMFIT,
    and thus curve analysis cannot guarantee this option is properly managed 
    in all LMFIT model subclasses.
developer:
  - |
    To map experiment result data to a particular LMFIT model in the :class:`CurveAnalysis`,
    an author must provide the data_subfit_map analysis option rather than directly binding 
    data_sort_key with the target LMFIT model. 
    The data_subfit_map option is a dictionary keyed on the model name. For example,
    
    .. code-block:: python3
    
      class MyAnalysis(CurveAnalysis):
        
        def __init__(self):
          super().__init__(
            models=[
              lmfit.models.ExpressionModel(expr="x+a0", name="expr1"),
              lmfit.models.ExpressionModel(expr="x+a1", name="expr2"),
            ]
          )
        
        @classmethod
        def _default_options(cls) -> Options:
          options = super()._default_options()
          options.data_subfit_map = {"expr1": {"tag": "1"}, "expr2": {"tag": "2"}}
          return options
      
    As shown in above, the dictionary had been attached to each LMFIT model 
    is now moved to the data_subfit_map option.
