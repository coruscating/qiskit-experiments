---
upgrade:
  - |
    The :class:`CurveAnalysis` class has been updated to use the covariance between fit
    parameters in the error propagation. This will provide more accurate standard
    error for your fit values.
  - |
    The data format of analysis result data value has been replaced from
    :class:`FitVal` to ``uncertainties.ufloat`` from the Python
    `uncertainties <https://pythonhosted.org/uncertainties/>`__ package to support
    error propatation for post analysis computation.

    .. code-block:: python

      expdata = T1(0, delays, backend).run()
      fit_t1 = expdata.analysis_results("T1").value

      assert isinstance(fit_t1, UFloat)

      new_value = fit_t1 / 2
      new_value.std_dev  # show new standard error value

    Now ``fit_t1`` value is an ``uncertainties.ufloat`` instance with
    new properties :attr:`.nominal_value` and :attr:`.std_dev`,
    and you can directly apply mathematical operation to this object.
    The new error value is predicted by linear error propagation theory.
    Note that you no longer need to separately compute the standard error.

    This computation is offered by the `uncertainties <https://pythonhosted.org/uncertainties/>`__
    package which is a requirement since from Qiskit Experiments v0.2.
    The functions supporting error propagation is also available in ``uncertainties.umath``.
  - |
    In the analysis result object, :attr:`FitVal.unit` property has been moved to
    :attr:`DbAnalysisResultV1.extra` as metadata.
features:
  - |
    The all curve fit plot generated by the :class:`CurveAnalysis` shows a
    confidence interval properly computed with error propagation.
    By default it shows 1 sigma and 3 sigma region but you can customize this
    via the ``style`` option of the curve analysis subclass.
    The :class:`PlotterStyle` dataclass has been updated with new attribute :attr:`plot_sigma`
    which takes a list of ``tuple(float, float)`` specifying a pair of sigma and transparency.
deprecations:
  - |
    The :class:`FitVal` class had been deprecated and being replaced with the uncertainties package.
    When loading saved experiments or analysis results any :class:`FitVal` s will be
    implicitly converted into :class:`UFloat` which should be re-saved
    to ensure these experiments can be reloaded in the future.
